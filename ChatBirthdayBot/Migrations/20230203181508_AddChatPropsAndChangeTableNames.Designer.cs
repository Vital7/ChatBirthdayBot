// <auto-generated />
using System;
using ChatBirthdayBot.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChatBirthdayBot.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230203181508_AddChatPropsAndChangeTableNames")]
    partial class AddChatPropsAndChangeTableNames
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("ChatBirthdayBot.Database.ChatRecord", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<byte>("CustomOffsetInHours")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Locale")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ShouldPinNotify")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("TimeZoneOffset")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Chats", (string)null);
                });

            modelBuilder.Entity("ChatBirthdayBot.Database.UserChat", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ChatId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "ChatId");

                    b.HasIndex("ChatId");

                    b.HasIndex("UserId");

                    b.ToTable("UserChats");
                });

            modelBuilder.Entity("ChatBirthdayBot.Database.UserRecord", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<byte?>("BirthdayDay")
                        .HasColumnType("INTEGER");

                    b.Property<byte?>("BirthdayMonth")
                        .HasColumnType("INTEGER");

                    b.Property<ushort?>("BirthdayYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("ChatBirthdayBot.Database.UserChat", b =>
                {
                    b.HasOne("ChatBirthdayBot.Database.ChatRecord", "Chat")
                        .WithMany("UserChats")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChatBirthdayBot.Database.UserRecord", "User")
                        .WithMany("UserChats")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChatBirthdayBot.Database.ChatRecord", b =>
                {
                    b.Navigation("UserChats");
                });

            modelBuilder.Entity("ChatBirthdayBot.Database.UserRecord", b =>
                {
                    b.Navigation("UserChats");
                });
#pragma warning restore 612, 618
        }
    }
}
