// <auto-generated />
using System;
using ChatBirthdayBot.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ChatBirthdayBot.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("ChatBirthdayBot.Database.ChatRecord", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    b.Property<string>("Locale")
                        .HasColumnType("varchar");

                    b.Property<string>("Name")
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("Chat");
                });

            modelBuilder.Entity("ChatBirthdayBot.Database.UserChat", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("UserID");

                    b.Property<long>("ChatId")
                        .HasColumnType("integer")
                        .HasColumnName("ChatID");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "ChatId");

                    b.HasIndex(new[] { "ChatId" }, "UserChat_ChatID");

                    b.HasIndex(new[] { "UserId" }, "UserChat_UserID");

                    b.ToTable("UserChat");
                });

            modelBuilder.Entity("ChatBirthdayBot.Database.UserRecord", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    b.Property<byte?>("BirthdayDay")
                        .HasColumnType("integer");

                    b.Property<byte?>("BirthdayMonth")
                        .HasColumnType("integer");

                    b.Property<ushort?>("BirthdayYear")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar");

                    b.Property<string>("Username")
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ChatBirthdayBot.Database.UserChat", b =>
                {
                    b.HasOne("ChatBirthdayBot.Database.ChatRecord", "Chat")
                        .WithMany("UserChats")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChatBirthdayBot.Database.UserRecord", "User")
                        .WithMany("UserChats")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChatBirthdayBot.Database.ChatRecord", b =>
                {
                    b.Navigation("UserChats");
                });

            modelBuilder.Entity("ChatBirthdayBot.Database.UserRecord", b =>
                {
                    b.Navigation("UserChats");
                });
#pragma warning restore 612, 618
        }
    }
}
